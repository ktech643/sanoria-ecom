#!/sbin/sh

##########################################################################################
#
# Magisk Module Installer Script
#
##########################################################################################

##########################################################################################
# Config Flags
##########################################################################################

SKIPMOUNT=false
PROPFILE=true
POSTFSDATA=true
LATESTARTSERVICE=true
REPLACE=""

##########################################################################################
# Functions
##########################################################################################

print_modname() {
  ui_print "*******************************"
  ui_print "   Samsung S21 FE 4G Fix v1.0  "
  ui_print "*******************************"
}

on_install() {
  ui_print "- Installing Samsung S21 FE 4G connectivity fix"
  
  # Check device
  DEVICE=$(getprop ro.product.model)
  ui_print "- Device: $DEVICE"
  
  if echo "$DEVICE" | grep -q "SM-G990"; then
    ui_print "- Samsung S21 FE detected"
  else
    ui_print "- Warning: Optimized for Samsung S21 FE"
  fi
  
  ui_print "- This module will:"
  ui_print "  • Completely convert IWLAN to GSM/LTE"
  ui_print "  • Force cellular network registration"
  ui_print "  • Fix data connectivity issues"
  ui_print "  • Reset APN and data connections"
  ui_print "  • Apply persistent system properties"
  ui_print "  • Reset telephony services"
  
  ui_print "- Installation completed"
  ui_print "- Reboot required to apply changes"
}

set_permissions() {
  set_perm_recursive $MODPATH 0 0 0755 0644
  set_perm $MODPATH/service.sh 0 0 0755
  set_perm $MODPATH/post-fs-data.sh 0 0 0755
  set_perm $MODPATH/data_fix.sh 0 0 0755
}

##########################################################################################
# MMT Extended
##########################################################################################

SKIPUNZIP=1
unzip -o "$ZIPFILE" module.prop -d $TMPDIR >&2
[ ! -f $TMPDIR/module.prop ] && abort "! Unable to extract zip file!"

$BOOTMODE && MODDIRNAME=modules_update || MODDIRNAME=modules
MODULEROOT=$NVBASE/$MODDIRNAME
MODID=`grep_prop id $TMPDIR/module.prop`
MODPATH=$MODULEROOT/$MODID
MODNAME=`grep_prop name $TMPDIR/module.prop`

print_modname

ui_print "******************************"
ui_print " Powered by Magisk (@topjohnwu)"
ui_print "******************************"

##########################################################################################
# Install mod
##########################################################################################

ui_print "- Extracting module files"
unzip -o "$ZIPFILE" -x 'META-INF/*' -d $MODPATH >&2

# Handle replace folders
for TARGET in $REPLACE; do
  ui_print "- Replace target: $TARGET"
  mktouch $MODPATH$TARGET/.replace
done

if is_mounted /data; then
  on_install
else
  abort "! This mod needs to be installed in Magisk Manager"
fi

# Copy over custom sepolicy rules
if [ -f $MODPATH/sepolicy.rule -a -e $PERSISTDIR ]; then
  ui_print "- Installing custom sepolicy patch"
  PERSISTMOD=$PERSISTDIR/magisk/$MODID
  mkdir -p $PERSISTMOD
  cp -af $MODPATH/sepolicy.rule $PERSISTMOD/sepolicy.rule
fi

# Remove stuffs that don't belong to modules
rm -rf \
$MODPATH/system/placeholder $MODPATH/customize.sh \
$MODPATH/README.md $MODPATH/.git* 2>/dev/null

##########################################################################################
# Finalizing
##########################################################################################

cd /
$BOOTMODE || recovery_cleanup
rm -rf $TMPDIR

ui_print "- Done"
exit 0